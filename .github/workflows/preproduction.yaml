name: üòé PreProd
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "main"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.ref }}

jobs:
  build-front:
    environment: build-preproduction
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout code repository
        uses: actions/checkout@v4

      - name: üìå Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ vars.PROJECT_NAME }}/${{ github.event.repository.name }}/front
          tags: |
            type=sha,prefix=preprod-,format=long,priority=850
            type=sha,prefix=sha-,format=long,priority=890

      - name: üì¶ Build and push Docker image for front
        uses: socialgouv/workflows/actions/buildkit@v1
        with:
          context: "src/client"
          dockerfile: "Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: "${{ vars.REGISTRY_URL }}"
          registry-username: "${{ secrets.REGISTRY_USERNAME }}"
          registry-password: "${{ secrets.REGISTRY_PASSWORD }}"
          buildkit-cert-ca: "${{ secrets.BUILDKIT_CERT_CA }}"
          buildkit-cert: "${{ secrets.BUILDKIT_CERT }}"
          buildkit-cert-key: "${{ secrets.BUILDKIT_CERT_KEY }}"
          buildkit-svc-count: ${{ vars.BUILDKIT_SVC_COUNT }}
          buildkit-daemon-address: ${{ vars.BUILDKIT_DAEMON_ADDRESS }}

  build-server:
    environment: build-preproduction
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout code repository
        uses: actions/checkout@v4

      - name: üìå Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ vars.PROJECT_NAME }}/${{ github.event.repository.name }}/server
          tags: |
            type=sha,prefix=preprod-,format=long,priority=850
            type=sha,prefix=sha-,format=long,priority=890

      - name: üì¶ Build and push Docker image for server
        uses: socialgouv/workflows/actions/buildkit@v1
        with:
          context: "src"
          dockerfile: "server/Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: "${{ vars.REGISTRY_URL }}"
          registry-username: "${{ secrets.REGISTRY_USERNAME }}"
          registry-password: "${{ secrets.REGISTRY_PASSWORD }}"
          buildkit-cert-ca: "${{ secrets.BUILDKIT_CERT_CA }}"
          buildkit-cert: "${{ secrets.BUILDKIT_CERT }}"
          buildkit-cert-key: "${{ secrets.BUILDKIT_CERT_KEY }}"
          buildkit-svc-count: ${{ vars.BUILDKIT_SVC_COUNT }}
          buildkit-daemon-address: ${{ vars.BUILDKIT_DAEMON_ADDRESS }}

  build-graphiql:
    environment: build-preproduction
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout code repository
        uses: actions/checkout@v4

      - name: üìå Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ vars.PROJECT_NAME }}/${{ github.event.repository.name }}/graphiql
          tags: |
            type=sha,prefix=preprod-,format=long,priority=850
            type=sha,prefix=sha-,format=long,priority=890

      - name: üì¶ Build and push Docker image for graphiql
        uses: socialgouv/workflows/actions/buildkit@v1
        with:
          context: "src/graphiql"
          dockerfile: "Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: "${{ vars.REGISTRY_URL }}"
          registry-username: "${{ secrets.REGISTRY_USERNAME }}"
          registry-password: "${{ secrets.REGISTRY_PASSWORD }}"
          buildkit-cert-ca: "${{ secrets.BUILDKIT_CERT_CA }}"
          buildkit-cert: "${{ secrets.BUILDKIT_CERT }}"
          buildkit-cert-key: "${{ secrets.BUILDKIT_CERT_KEY }}"
          buildkit-svc-count: ${{ vars.BUILDKIT_SVC_COUNT }}
          buildkit-daemon-address: ${{ vars.BUILDKIT_DAEMON_ADDRESS }}

  build-strapi:
    environment: build-preproduction
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout code repository
        uses: actions/checkout@v4

      - name: üìå Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ vars.PROJECT_NAME }}/${{ github.event.repository.name }}/strapi
          tags: |
            type=sha,prefix=preprod-,format=long,priority=850
            type=sha,prefix=sha-,format=long,priority=890

      - name: üì¶ Build and push Docker image for strapi
        uses: socialgouv/workflows/actions/buildkit@v1
        with:
          context: "src/strapi"
          dockerfile: "Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: "${{ vars.REGISTRY_URL }}"
          registry-username: "${{ secrets.REGISTRY_USERNAME }}"
          registry-password: "${{ secrets.REGISTRY_PASSWORD }}"
          buildkit-cert-ca: "${{ secrets.BUILDKIT_CERT_CA }}"
          buildkit-cert: "${{ secrets.BUILDKIT_CERT }}"
          buildkit-cert-key: "${{ secrets.BUILDKIT_CERT_KEY }}"
          buildkit-svc-count: ${{ vars.BUILDKIT_SVC_COUNT }}
          buildkit-daemon-address: ${{ vars.BUILDKIT_DAEMON_ADDRESS }}

  build-n8n:
    environment: build-preproduction
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚è¨ Checkout code repository
        uses: actions/checkout@v4

      - name: üìå Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ vars.PROJECT_NAME }}/${{ github.event.repository.name }}/n8n
          tags: |
            type=sha,prefix=preprod-,format=long,priority=850
            type=sha,prefix=sha-,format=long,priority=890

      - name: üì¶ Build and push Docker image for n8n
        uses: socialgouv/workflows/actions/buildkit@v1
        with:
          context: "src/n8n"
          dockerfile: "Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          registry: "${{ vars.REGISTRY_URL }}"
          registry-username: "${{ secrets.REGISTRY_USERNAME }}"
          registry-password: "${{ secrets.REGISTRY_PASSWORD }}"
          buildkit-cert-ca: "${{ secrets.BUILDKIT_CERT_CA }}"
          buildkit-cert: "${{ secrets.BUILDKIT_CERT }}"
          buildkit-cert-key: "${{ secrets.BUILDKIT_CERT_KEY }}"
          buildkit-svc-count: ${{ vars.BUILDKIT_SVC_COUNT }}
          buildkit-daemon-address: ${{ vars.BUILDKIT_DAEMON_ADDRESS }}

  kontinuous:
    needs: [build-front, build-server, build-graphiql, build-strapi, build-n8n]
    name: "Deploy on Kubernetes üê≥"
    uses: socialgouv/workflows/.github/workflows/use-ks-gh-preproduction-atlas.yaml@v1
    secrets: inherit
