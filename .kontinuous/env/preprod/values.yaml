strapi:
  strategyType: Recreate
  ~needs: [build-strapi, pg-strapi]
  env:
    - name: DATABASE_NAME
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-strapi-app
    - name: DATABASE_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-strapi-superuser
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-strapi-superuser
    - name: DATABASE_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-strapi-superuser
    - name: DATABASE_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-strapi-superuser

n8n:
  ~needs: [build-n8n, pg-n8n]
  env:
    - name: DB_POSTGRESDB_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-n8n-app
    - name: DB_POSTGRESDB_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-n8n-superuser
    - name: PG_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser

server:
  ~needs: [build-server, pg]
  env:
    - name: PG_DB
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser
    - name: PG_SSL_SELF_SIGNED
      value: "true"

pg:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

pg-n8n:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

pg-strapi:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

# pgadmin:
#   ~chart: app
#   imagePackage: pgadmin
#   image: dpage/pgadmin4:8.5
#   containerPort: 80
#   probesPath: /
#   securityContext:
#     runAsUser: 5050
#   envFrom:
#     - secretRef:
#         name: pgadmin
#   vars:
#     PGADMIN_CONFIG_SERVER_MODE: "False"
#     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
#   volumeMounts:
#     - mountPath: /pgadmin
#       name: servers
#   volumes:
#     - name: servers
#       secret:
#         secretName: pgadmin-servers
#         items:
#           - key: servers
#             path: servers.json
