strapi:
  strategyType: Recreate
  ~needs: [pg-strapi]
  env:
    - name: DATABASE_NAME
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-strapi-app
    - name: DATABASE_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-strapi-superuser
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-strapi-superuser
    - name: DATABASE_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-strapi-superuser
    - name: DATABASE_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-strapi-superuser

n8n:
  ~needs: [pg-n8n]
  env:
    - name: DB_POSTGRESDB_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-n8n-app
    - name: DB_POSTGRESDB_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-n8n-superuser
    - name: PG_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser

server:
  ~needs: [pg]
  env:
    - name: PG_DB
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser
    - name: PG_SSL_SELF_SIGNED
      value: "true"

pg:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

pg-n8n:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

pg-strapi:
  ~chart: pg
  cnpg-cluster:
    backup:
      ~tpl~enabled: "false"

pgadmin:
  ~chart: pgadmin
  oauth2-proxy:
    host: pgadmin-{{ .Values.global.host }}
    config:
      OAUTH2_PROXY_GITHUB_ORG: "SocialGouv"
      OAUTH2_PROXY_GITHUB_TEAM: "admins-fce,sre"
    envFrom:
      - secretRef:
          name: oauth2-proxy
  secrets:
    - name: pg-app
      keys:
        user: PGUSER
        password: PGPASSWORD
        host: PGHOST
        port: PGPORT
        database: PGDATABASE
    - name: pg-strapi-superuser
      keys:
        user: user
        password: password
        host: host
        port: port
    - name: pg-n8n-app
      keys:
        user: PGUSER
        password: PGPASSWORD
        host: PGHOST
        port: PGPORT
        database: PGDATABASE
