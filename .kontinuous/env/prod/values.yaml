n8n:
  ~needs: [build-n8n, pg-n8n]
  resources:
  # We're not setting limit=request as : 
  # - usually n8n process consumes almost no resource
  # - a cron runs every night but does nothing except once a month when a new file is added. Then it can use up to 2cpu.
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: "2"
      memory: 1.5Gi
  env:
    - name: DB_POSTGRESDB_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-n8n-app
    - name: DB_POSTGRESDB_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-n8n-superuser
    - name: DB_POSTGRESDB_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-n8n-superuser
    - name: PG_DATABASE
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser
    - name: PG_SSL 
      value: "true"

redis:
  resources:
    limits:
      cpu: "1"
      memory: 1Gi

graphiql:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 2566Mi

front:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

server:
  ~needs: [build-server, pg]
  resources:
    requests:
      cpu: 100m
      memory: 386Mi
    limits:
      cpu: 200m
      memory: 512Mi
  env:
    - name: PG_DB
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-app
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-superuser
    - name: PG_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-superuser
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-superuser
    - name: PG_USER
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-superuser
    - name: PG_SSL_SELF_SIGNED
      value: "true"

strapi:
  ~needs: [build-strapi, pg-strapi]
  strategyType: Recreate
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 200m
      memory: 512Mi
  env:
    - name: DATABASE_NAME
      valueFrom:
        secretKeyRef:
          key: PGDATABASE
          name: pg-strapi-app
    - name: DATABASE_HOST
      valueFrom:
        secretKeyRef:
          key: host
          name: pg-strapi-superuser
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: pg-strapi-superuser
    - name: DATABASE_PORT
      valueFrom:
        secretKeyRef:
          key: port
          name: pg-strapi-superuser
    - name: DATABASE_USERNAME
      valueFrom:
        secretKeyRef:
          key: user
          name: pg-strapi-superuser

pg:
  ~chart: pg
  cnpg-cluster:
    resources:
      requests:
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 1Gi

pg-n8n:
  ~chart: pg
  cnpg-cluster:
    resources:
      requests:
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 1Gi

pg-strapi:
  ~chart: pg
  cnpg-cluster:
    resources:
      requests:
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 1Gi
