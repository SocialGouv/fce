front:
  host: "{{ .Values.global.host }}"
  ~chart: app
  imagePackage: front
  probesPath: /healthz
  containerPort: 8080
  envFrom:
    - configMapRef:
        name: client-env

server:
  host: "{{ .Values.global.host }}"
  ingress:
    paths:
      - /api
  certSecretName: front-crt
  ~chart: app
  imagePackage: server
  probesPath: /healthz
  containerPort: 3000
  envFrom:
    - secretRef:
        name: server-env
    - configMapRef:
        name: server-env

graphiql:
  ~chart: app
  imagePackage: graphiql
  probesPath: /healthz
  containerPort: 8080

n8n:
  ~chart: app
  replicas: 1
  imagePackage: n8n
  probesPath: /healthz
  containerPort: 5678
  envFrom:
    - secretRef:
        name: n8n-env
    - configMapRef:
        name: n8n-env
  volumes:
    - name: downloads
  volumeMounts:
    - name: downloads
      mountPath: /tmp/download
  resources:
    requests:
      cpu: 10m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi

redis:
  ~chart: redis

strapi:
  replicas: 1
  volumes:
    - name: uploads
      persistentVolumeClaim:
        claimName: uploads
  volumeMounts:
    - name: uploads
      mountPath: /app/public/uploads
  securityContext:
    fsGroup: 1000
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/client-max-body-size: 128m
      nginx.ingress.kubernetes.io/proxy-body-size: 128m
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
      nginx.ingress.kubernetes.io/proxy-keepalive-requests: "100"
      nginx.ingress.kubernetes.io/proxy-keepalive-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
      nginx.org/client-max-body-size: 128m
      nginx.org/proxy-body-size: 128m
  ~chart: app
  imagePackage: strapi
  probesPath: /_health
  containerPort: 1337
  envFrom:
    - secretRef:
        name: strapi-env
    - configMapRef:
        name: strapi-env
